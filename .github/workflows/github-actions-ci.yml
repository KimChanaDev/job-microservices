name: GitHub Actions CI
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
permissions:
  actions: read
  contents: read
jobs:
  Jobber-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v5
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 24.7.0
          cache: 'npm'

      - name: Setup Protoc
        uses: arduino/setup-protoc@v3.0.0

      # - run: npm ci --legacy-peer-deps

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login AWS CLI
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 028767427893.dkr.ecr.us-east-1.amazonaws.com

      - name: Build, tag, and push image to Amazon ECR
        run: |
          IMAGES=(
            "jobber/auth apps/auth/Dockerfile"
            "jobber/jobs apps/jobs/Dockerfile"
            "jonber/executor apps/executor/Dockerfile" 
          )
          for IMAGE in "${IMAGES[@]}"; do
            IMAGE_NAME=$(echo $IMAGE | cut -d' ' -f1)
            DOCKERFILE_PATH=$(echo $IMAGE | cut -d' ' -f2)

            {
              docker build -t 028767427893.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_NAME:latest -f $DOCKERFILE_PATH .
              docker push 028767427893.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_NAME:latest
            } & # Run in background
          done
          wait  # Wait for all background processes to finish
