services:
  postgres:
    image: postgres:latest
    container_name: jobber-postgres
    environment:
      POSTGRES_USER: jobber
      POSTGRES_PASSWORD: jobber
      POSTGRES_DB: jobber
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U jobber']
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: .
      dockerfile: apps/auth/Dockerfile
    container_name: jobber-auth
    environment:
      - NODE_ENV=development
      - AUTH_APP_VERSION=1.0.0
      - AUTH_DATABASE_URL=postgresql://jobber:jobber@postgres:5432/jobber
      - AUTH_PORT=3000
      - AUTH_GRPC_URL=0.0.0.0:5000
      - AUTH_JWT_SECRET=YxD1NH9ox4zu81AoiTEng10kVgPOYIhf
      - AUTH_JWT_EXPIRATION_MS=2880000
    ports:
      - '3000:3000'
      - '5000:5000'
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000/healthcheck || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  jobs-service:
    build:
      context: .
      dockerfile: apps/jobs/Dockerfile
    container_name: jobber-jobs
    environment:
      - NODE_ENV=development
      - JOBS_APP_VERSION=1.0.0
      - JOBS_PORT=3001
      - JOBS_GRPC_URL=auth-service:5000
      - PULSAR_SERVICE_URL=pulsar://broker:6650
    ports:
      - '3001:3001'
    depends_on:
      auth-service:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3001/healthcheck || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  # Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    restart: on-failure
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_MEM=-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m
    command:
      - bash
      - -c
      - |
        bin/apply-config-from-env.py conf/zookeeper.conf && \
        bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
        exec bin/pulsar zookeeper
    healthcheck:
      test: ['CMD', 'bin/pulsar-zookeeper-ruok.sh']
      interval: 10s
      timeout: 5s
      retries: 30

  # Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    command:
      - bash
      - -c
      - |
        bin/pulsar initialize-cluster-metadata \
        --cluster cluster-a \
        --zookeeper zookeeper:2181 \
        --configuration-store zookeeper:2181 \
        --web-service-url http://broker:8080 \
        --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

  # Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    restart: on-failure
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
      # otherwise every time we run docker compose uo or down we fail to start due to Cookie
      # See: https://github.com/apache/bookkeeper/blob/405e72acf42bb1104296447ea8840d805094c787/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java#L57-68
      - advertisedAddress=bookie
      - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully

    # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

  # Start broker
  broker:
    image: apachepulsar/pulsar:latest
    container_name: broker
    hostname: broker
    restart: on-failure
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://127.0.0.1:6650
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - '6650:6650'
      - '8080:8080'

    command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"
